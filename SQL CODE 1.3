WITH
  customer_info AS (
  SELECT
    DISTINCT customer.CustomerID,
    contact.Firstname,
    contact.LastName,
    CONCAT(contact.Firstname, ' ', contact.LastName) AS fullname,
    CASE
      WHEN contact.title IS NULL THEN 'Dear'
    ELSE
    contact.title
  END
    AS Addressing_title,
    contact.Emailaddress,
    contact.phone,
    customer.AccountNumber,
    customer.CustomerType,
    address.city,
    (stateprovince.name) AS State,
    (countryregion.name) AS Country,
    address.AddressLine1 AS AddressLine1,
    address.AddressLine2 AS AddressLine2,
    COUNT(sales.SalesOrderID) AS number_of_orders,
    SUM(sales.totalDue) AS total_amount_of_purchases,
    MAX(DATE_TRUNC(sales.OrderDate,DAY)) AS last_order_date
  FROM
    `adwentureworks_db.customer` customer
  LEFT JOIN
    `adwentureworks_db.individual` ind -- TO obtain FK FOR the contact TABLE,
    LJ TO keep ALL IN customer table--
  ON
    customer.CustomerID = ind.CustomerID
  LEFT JOIN
    `adwentureworks_db.contact` contact
  ON
    ind.ContactID = contact.ContactID
  LEFT JOIN
    `adwentureworks_db.customeraddress` ca-- TO obtain FK FOR address table--
  ON
    customer.CustomerID = ca.CustomerID
  LEFT JOIN
    `adwentureworks_db.address` address
  ON
    ca.AddressID = address.AddressID
  LEFT JOIN
    `adwentureworks_db.stateprovince` stateprovince
  ON
    stateprovince.StateProvinceID = address.StateProvinceID
  LEFT JOIN
    `adwentureworks_db.countryregion` countryregion
  ON
    stateprovince.CountryRegionCode = countryregion.CountryRegionCode
  LEFT JOIN
    `adwentureworks_db.salesorderheader` sales
  ON
    Customer.CustomerId = sales.CustomerID
  INNER JOIN
    `adwentureworks_db.salesterritory` salesT
  ON
    customer.TerritoryID = salesT.TerritoryID
  WHERE
    CustomerType = 'I'
  GROUP BY
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14
  ORDER BY
    total_amount_of_purchases DESC)
SELECT
  *,
  CASE
    WHEN DATE(last_order_date) >= DATE_SUB(( SELECT MAX(DATE(last_order_date)) FROM customer_info), INTERVAL 365 DAY) THEN 'active'
  ELSE
  'inactive'
END
  AS Customer_status
FROM
  customer_info
ORDER BY
  CustomerId DESC
LIMIT
  500
